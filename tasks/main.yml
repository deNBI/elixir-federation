---
# @author: Mirko Schmidt (SVA)
# @author: Martin Lang (Deutsches Krebsforschungszentrum)
# @date: 2017-09-05
# 
# Ansible playbook to configure elixir federation in the staging environment
# elixir_federation
#
# Copyright 2017 Schmidt, Mirko (SVA GmbH)
# Copyright 2017 Lang, Martin (Deutsches Krebsforschungszentrum)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


- name: deploy shibboleth repository file
  copy:
    src: files/etc/yum.repos.d/shibboleth.repo
    dest: /etc/yum.repos.d/shibboleth.repo
    owner: root
    group: root
    mode: 0644
    
- name: modify /etc/hosts to popularise the external name
  lineinfile:
    path: /etc/hosts
    regexp: "# FQDN of the external VIP$"
    line: "{{ hosts_entry_external_name }}"

- name: install shibboleth
  yum:
    state: present
    name: shibboleth

- name: replace apache shib.conf
  copy:
    src: files/etc/httpd/conf.d/shib.conf
    dest: /etc/httpd/conf.d/shib.conf
    owner: root
    group: root
    mode: 0644
  notify: restart_apache

- name: copy shibboleth.xml
  copy:
    src: files/etc/shibboleth/{{ shibxml }}
    dest: /etc/shibboleth/shibboleth2.xml
  notify: restart_shibboleth

- name: copy attribute-map.xml
  copy:
    src: files/etc/shibboleth/attribute-map.xml
    dest: /etc/shibboleth/attribute-map.xml
  notify: restart_shibboleth

- name: untar shibboleth key and cert
  unarchive:
    src: files/{{ shibtargz }}
    dest: /etc/shibboleth
  notify: restart_shibboleth

- name: restorecon -vR /etc
  command: /sbin/restorecon -vR /etc

- name: start shibboleth service
  service:
    enabled: true
    state: started
    name: shibd

### keystone configuration starts here
- name: modify ServerName in /etc/httpd/conf.d/10-keystone_wsgi_main.conf
  lineinfile:
    path: /etc/httpd/conf.d/10-keystone_wsgi_main.conf
    regexp: '^  ServerName'
    line: "  ServerName https://{{ public_cloud_name }}:13000"
  notify: restart_apache

- name: Add UseCanonicalName On
  lineinfile:
    path: /etc/httpd/conf.d/10-keystone_wsgi_main.conf
    insertafter: '^  ServerName'
    line: '  UseCanonicalName On'
  notify: restart_apache

- name: insert Shibboleth locations
  blockinfile:
    path: /etc/httpd/conf.d/10-keystone_wsgi_main.conf
    insertbefore: '</VirtualHost>'
    block: |
      <Location /Shibboleth.sso>
        SetHandler shib
      </Location>
      <Location "/v3/OS-FEDERATION/identity_providers/elixir/protocols/mapped/auth">
        ShibRequestSetting requireSession 1
        AuthType shibboleth
        ShibExportAssertion Off
        Require valid-user
      </Location>
      <Location ~ "/v3/auth/OS-FEDERATION/websso/mapped">
        AuthType shibboleth
        Require valid-user
        ShibRequestSetting requireSession 1
        ShibRequireSession On
        ShibExportAssertion Off
      </Location>
      <Location ~ "/v3/auth/OS-FEDERATION/identity_providers/elixir/protocols/mapped/websso">
        AuthType shibboleth
        Require valid-user
      </Location>
      WSGIScriptAliasMatch ^(/v3/OS-FEDERATION/identity_providers/.*?/protocols/.*?/auth)$ /var/www/cgi-bin/keystone/keystone-public
  notify: restart_apache

- name: edit [auth] section in keystone.conf
  lineinfile:
    path: /etc/keystone/keystone.conf
    regexp: '^methods = external,password'
    line: 'methods = external,password,token,mapped,oauth1'
  notify: restart_apache

- name: edit remote_id_attribute in [federation]
  lineinfile:
    path: /etc/keystone/keystone.conf
    regexp: '^remote_id_attribute'
    line: 'remote_id_attribute = Shib-Identity-Provider'
  notify: restart_apache

- name: edit trusted_dashboard in [federation]
  lineinfile:
    path: /etc/keystone/keystone.conf
    regexp: '^trusted_dashboard'
    line: "trusted_dashboard = https://{{ public_cloud_name }}/dashboard/auth/websso/"
  notify: restart_apache

- name: edit sso_callback_template in [federation]
  lineinfile:
    path: /etc/keystone/keystone.conf
    insertafter: '^#sso_callback_template ='
    line: 'sso_callback_template = /etc/keystone/sso_callback_template.html'
  notify: restart_apache

- name: edit openstack-dashboard/local_settings SECURE_PROXY_SSL_HEADER
  lineinfile:
    path: /etc/openstack-dashboard/local_settings
    insertafter: '^#SECURE_PROXY_SSL_HEADER'
    line: "SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')"
  notify: restart_apache

- name: edit openstack-dashboard/local_settings OPENSTACK_KEYSTONE_URL
  lineinfile:
    path: /etc/openstack-dashboard/local_settings
    regexp: '^OPENSTACK_KEYSTONE_URL'
    line: 'OPENSTACK_KEYSTONE_URL = "https://{{ public_cloud_name }}:13000/v3"'
  notify: restart_apache

- name: WEBSSO settings in /etc/openstack-dashboard/local_settings
  blockinfile:
    path: /etc/openstack-dashboard/local_settings
    insertafter: '^#WEBSSO_ENABLED'
    block: |
      WEBSSO_ENABLED = True
      WEBSSO_CHOICES = (
        ("credentials", _("Keystone Credentials")),
        ("mapped", _("ELIXIR")),
      )
      WEBSSO_INITIAL_CHOICE="credentials"
  notify: restart_apache

### haproxy config
- name: get designated coordinator
  command: /usr/sbin/crm_mon -1
  register: crm_mon_result

- name: parse dc hostname
  set_fact:
    dc_hostname: "{{ crm_mon_result.stdout | regex_search(regexp, '\\1') | first }}"
  vars:
    regexp: 'Current DC\:\s([a-zA-Z0-9\-]*)'

- name: add line "cookie SERVERID insert indirect nocache"
  lineinfile:
    path: /etc/haproxy/haproxy.cfg
    insertbefore: '(server overcloud-controller-0.*):5000'
    line: '  cookie SERVERID  insert  indirect  nocache'
  notify: pcs_resource_restart

- name: add cookie to server line in keystone_public (controller-0)
  lineinfile:
    path: /etc/haproxy/haproxy.cfg
    regexp: 'server overcloud-controller-0.*5000'
    line: "  server {{ controller_0 }}.internalapi.localdomain {{ controller_0_ip }}:5000 check cookie {{ controller_0 }} fall 5 inter 2000 rise 2"
  notify: pcs_resource_restart

- name: add cookie to server line in keystone_public (controller-1)
  lineinfile:
    path: /etc/haproxy/haproxy.cfg
    regexp: 'server overcloud-controller-1.*5000'
    line: "  server {{ controller_1 }}.internalapi.localdomain {{ controller_1_ip }}:5000 check cookie {{ controller_1 }} fall 5 inter 2000 rise 2"
  notify: pcs_resource_restart

- name: add cookie to server line in keystone_public (controller-2)
  lineinfile:
    path: /etc/haproxy/haproxy.cfg
    regexp: 'server overcloud-controller-2.*5000'
    line: "  server {{ controller_2 }}.internalapi.localdomain {{ controller_2_ip }}:5000 check cookie {{ controller_2 }} fall 5 inter 2000 rise 2"
  notify: pcs_resource_restart

- name: remove shibboleth repository
  file:
    path: /etc/yum.repos.d/shibboleth.repo
    state: absent
    
